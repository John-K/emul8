<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
    <UsingTask AssemblyFile="$(MSBuildProjectDirectory)/../../External/cctask/CCTask/bin/Release/CCTask.dll" TaskName="EnvironmentTask" />

    <Target Name="_PrepareProperties" DependsOnTargets="SetEndianess">
        <Error Text="Configuration not provided" Condition=" $(Configuration) == '' " />
        <EnvironmentTask>
            <Output TaskParameter="WordSize" PropertyName="HostWordSize" />
        </EnvironmentTask>
        <Message Text="Detected host word size: $(HostWordSize)" />

        <PropertyGroup>
            <ZipBaseDirectory>zip</ZipBaseDirectory>
            <ZipDirectory>$(ZipBaseDirectory)/$(Configuration)</ZipDirectory>
            <ZipFile>translate-$(Architecture).zip</ZipFile>
        </PropertyGroup>

        <CreateItem Include="@(Endianess->'bin/$(Configuration)/lib$(HostWordSize)/translate-$(Architecture)-%(Identity).so')" >
            <Output TaskParameter="Include" ItemName="SoFiles" />
        </CreateItem>
    </Target>

    <Target Name="Compile" DependsOnTargets="_PrepareProperties">
        <!-- Due to a bug in some versions of xbuild we set default value of $(TargetWordSize) before passing it to 'translate.cproj' as it is impossible to
             overwrite it later. -->
        <PropertyGroup>
            <TargetWordSize Condition=" $(TargetWordSize) == '' ">32</TargetWordSize>
        </PropertyGroup>
        <MSBuild Projects="./translate.cproj" Targets="VerifyProperties;GenerateFlags;Compile;Link;Build" Properties="AdditionalCompilationFlags=$(AdditionalCompilationFlags);HostArchitecture=i386;HostEndianess=le;HostWordSize=$(HostWordSize);TargetEndianess=%(Endianess.Identity);TargetArchitecture=$(Architecture);EmulatedTarget=$(EmulatedTarget);Configuration=$(Configuration);TargetWordSize=$(TargetWordSize)" />
    </Target>

    <Target Name="CreateZIP" DependsOnTargets="Compile" Inputs="@(SoFiles -> '%(Identity)')" Outputs="$(ZipDirectory)/$(ZipFile)">
        <MakeDir Directories="$(ZipDirectory)" />
        <Exec Command="cd bin/$(Configuration); rm -f ../../$(ZipDirectory)/$(ZipFile); zip ../../$(ZipDirectory)/$(ZipFile) @(SoFiles -> 'lib$(HostWordSize)/%(filename)%(extension)', ' ')" />
        <ItemGroup>
            <BuildProjectOutput Include="translate-$(Architecture).zip" />
        </ItemGroup>
    </Target>

    <Target Name="Build" DependsOnTargets="CreateZIP" />

    <Target Name="ActualClean" DependsOnTargets="_PrepareProperties">
        <Delete Files="$(ZipDirectory)/$(ZipFile)" />
        <Exec Command="rmdir $(ZipDirectory) -p --ignore-fail-on-non-empty" Condition="Exists('$(ZipDirectory)')"/>
        <MSBuild Projects="translate.cproj" Targets="Clean" />
    </Target>

    <!-- It is intended to have 'Clean' and 'ActualClean' targets separated.
         Thanks to this multiple calling of 'Clean' from MSBuild task will not cause
         'ActualClean' to run more than once. -->
    <Target Name="Clean" DependsOnTargets="ActualClean" />
</Project>
